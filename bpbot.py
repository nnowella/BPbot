import telebot
from telebot import types

token = ""

bot = telebot.TeleBot(token=token)

subjects = ['–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –∏ –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
            '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞','–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞',
            '–§–∏–∑–∏–∫–∞','–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫',
            '–ë–∏–æ–ª–æ–≥–∏—è –∏ –•–∏–º–∏—è',
            '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ –∏ –ò—Å—Ç–æ—Ä–∏—è',
            '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è',
            '–û–ë–ñ']

teachers = ['–°—É—Ä–∞–¥–µ–µ–≤–∞ –ò—Ä–∏–Ω–∞ –ì–µ–Ω–Ω–∞–¥—å–µ–≤–Ω–∞',
            '–Æ—Ä–∫–µ–≤–∏—á –î–º–∏—Ç—Ä–∏–π –ï–≤–≥–µ–Ω—å–µ–≤–∏—á',
            '–°–ª—É—Ü–∫–∏–π –õ–µ–æ–Ω–∏–¥ –ë–æ—Ä–∏—Å–æ–≤–∏—á',
            '–ö–æ–Ω–æ–≤–∞–ª–æ–≤–∞ –¢–∞—Ç—å—è–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞',
            '–ö–æ–Ω–¥—Ä—É—Ö–æ–≤–∞ –û–ª—å–≥–∞ –í–∞—Å–∏–ª—å–µ–≤–Ω–∞',
            '–ì–æ—Ä–æ—à–∫–æ –ï–≤–≥–µ–Ω–∏–π –í–∞–ª–µ—Ä—å–µ–≤–∏—á',
            '–ì–æ—Ä–±—É–Ω–æ–≤–∞ –ù–∞—Ç–∞–ª—å—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞',
            '–ü–µ—Ä–µ–ø–µ–ª–∏—Ü—ã–Ω –°–µ—Ä–≥–µ–π –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á',
            '–ú–æ—Ä–≥—É–Ω–µ–Ω–∫–æ –ï–ª–µ–Ω–∞ –Æ—Ä—å–µ–≤–Ω–∞',
            '–ö–∞—Ä–ø–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞',
            '–ö–∏—Ä—Å–∞–Ω–æ–≤–∞ –ù–∞—Ç–∞–ª—å—è –ê–ª–µ–∫—Å–µ–µ–≤–Ω–∞',
            '–ë–∞–∂–µ–Ω–æ–≤ –û–ª–µ–≥ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á',
            '–°—Ç—Ä–∏–∂–∞–∫–æ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è –õ–µ–æ–Ω–∏–¥–æ–≤–Ω–∞',
            '–¢–µ—Ä—è–µ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤–∏—á']

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup()
    markup.add(types.KeyboardButton("–ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Çüîç"))
    bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}</b>\n \n–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º —É—á–∏—Ç–µ–ª–µ–π <u>–®–∫–æ–ª—ã ‚Ññ1561</u>üöÄ\n \n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <u>–∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É</u>‚¨áÔ∏è", parse_mode='html', reply_markup = markup)
    bot.register_next_step_handler(message, search)

def com_search(message):
    markup = types.ReplyKeyboardMarkup()
    bp_initials = types.KeyboardButton("–ü–æ –§–ò–ûüë§")
    bp_subject = types.KeyboardButton("–ü–æ –ü—Ä–µ–¥–º–µ—Ç—Éüìö")
    markup.row(bp_initials, bp_subject)
    bp_cancel = types.KeyboardButton("–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è")
    markup.row(bp_cancel)
    bot.send_message(message.chat.id, "<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:</b>", parse_mode='html', reply_markup = markup)

@bot.message_handler(commands=['search'])
def search(message):
    if message.text == "–ù–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Çüîç":
        com_search(message)
        bot.register_next_step_handler(message, selection)
    else:
        com_search(message)
        selection(message)

def selection(message):
    if message.text == "–ü–æ –ü—Ä–µ–¥–º–µ—Ç—Éüìö":
        subject(message)
    if message.text == "–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è":
        start(message)

def subject(message):
    markup = types.ReplyKeyboardMarkup()
    s_ruslit = types.KeyboardButton("–†—É—Å—Å–∫–∏–π —è–∑—ã–∫")
    markup.row(s_ruslit)
    s_mat = types.KeyboardButton("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
    s_inf = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
    markup.row(s_mat, s_inf)
    s_fiz = types.KeyboardButton("–§–∏–∑–∏–∫–∞")
    s_forlan = types.KeyboardButton("–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫")
    markup.row(s_fiz, s_forlan)
    s_biochem = types.KeyboardButton("–ë–∏–æ–ª–æ–≥–∏—è –∏ –•–∏–º–∏—è")
    s_sochis = types.KeyboardButton("–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ –∏ –ò—Å—Ç–æ—Ä–∏—è")
    markup.row(s_biochem, s_sochis)
    s_geo = types.KeyboardButton("–ì–µ–æ–≥—Ä–∞—Ñ–∏—è")
    s_obj = types.KeyboardButton("–û–ë–ñ")
    markup.row(s_geo, s_obj)
    s_cancel = types.KeyboardButton("–û—Ç–º–µ–Ω–∞‚Ü©Ô∏è")
    markup.row(s_cancel)
    bot.send_message(message.chat.id, "<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:</b>", parse_mode='html', reply_markup = markup)
    bot.register_next_step_handler(message, s_correlation)

def s_correlation(message):
    body = message.text
    for subject in subjects:
        if body == subject:
            teacher(message)

def teacher(message):
    markup = types.ReplyKeyboardMarkup()
    s_mat = types.KeyboardButton("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
    markup.row(s_mat)
    bot.send_message(message.chat.id, "<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:</b>", parse_mode='html', reply_markup = markup)
    bot.register_next_step_handler(message, t_correlation)

def t_correlation(message):
    body = message.text
    for teacher in teachers:
        if body == teacher:
            a = 1

bot.infinity_polling()